(()=>{"use strict";Math.pow(10,8);const t=36e5,e=Symbol.for("constructDateFrom");function r(t,r){return"function"==typeof t?t(r):t&&"object"==typeof t&&e in t?t[e](r):t instanceof Date?new t.constructor(r):new Date(r)}function n(t,e){return r(e||t,t)}function o(t,e){const r=n(t,e?.in);return r.setHours(0,0,0,0),r}function s(t,e){return function(t,e,n){const[s,a]=function(t,...e){const n=r.bind(null,t||e.find((t=>"object"==typeof t)));return e.map(n)}(n?.in,t,e);return+o(s)==+o(a)}(r(e?.in||t,t),function(t){return r(t,Date.now())}(e?.in||t))}function a(e,o){const s=()=>r(o?.in,NaN),a=o?.additionalDigits??2,g=function(t){const e={},r=t.split(i.dateTimeDelimiter);let n;if(r.length>2)return e;if(/:/.test(r[0])?n=r[0]:(e.date=r[0],n=r[1],i.timeZoneDelimiter.test(e.date)&&(e.date=t.split(i.timeZoneDelimiter)[0],n=t.substr(e.date.length,t.length))),n){const t=i.timezone.exec(n);t?(e.time=n.replace(t[1],""),e.timezone=t[1]):e.time=n}return e}(e);let f;if(g.date){const t=function(t,e){const r=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+e)+"})|(\\d{2}|[+-]\\d{"+(2+e)+"})$)"),n=t.match(r);if(!n)return{year:NaN,restDateString:""};const o=n[1]?parseInt(n[1]):null,s=n[2]?parseInt(n[2]):null;return{year:null===s?o:100*s,restDateString:t.slice((n[1]||n[2]).length)}}(g.date,a);f=function(t,e){if(null===e)return new Date(NaN);const r=t.match(c);if(!r)return new Date(NaN);const n=!!r[4],o=u(r[1]),s=u(r[2])-1,a=u(r[3]),i=u(r[4]),l=u(r[5])-1;if(n)return function(t,e,r){return e>=1&&e<=53&&r>=0&&r<=6}(0,i,l)?function(t,e,r){const n=new Date(0);n.setUTCFullYear(t,0,4);const o=7*(e-1)+r+1-(n.getUTCDay()||7);return n.setUTCDate(n.getUTCDate()+o),n}(e,i,l):new Date(NaN);{const t=new Date(0);return function(t,e,r){return e>=0&&e<=11&&r>=1&&r<=(m[e]||(h(t)?29:28))}(e,s,a)&&function(t,e){return e>=1&&e<=(h(t)?366:365)}(e,o)?(t.setUTCFullYear(e,s,Math.max(o,a)),t):new Date(NaN)}}(t.restDateString,t.year)}if(!f||isNaN(+f))return s();const j=+f;let v,b=0;if(g.time&&(b=function(e){const r=e.match(l);if(!r)return NaN;const n=p(r[1]),o=p(r[2]),s=p(r[3]);return function(t,e,r){return 24===t?0===e&&0===r:r>=0&&r<60&&e>=0&&e<60&&t>=0&&t<25}(n,o,s)?n*t+6e4*o+1e3*s:NaN}(g.time),isNaN(b)))return s();if(!g.timezone){const t=new Date(j+b),e=n(0,o?.in);return e.setFullYear(t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()),e.setHours(t.getUTCHours(),t.getUTCMinutes(),t.getUTCSeconds(),t.getUTCMilliseconds()),e}return v=function(e){if("Z"===e)return 0;const r=e.match(d);if(!r)return 0;const n="+"===r[1]?-1:1,o=parseInt(r[2]),s=r[3]&&parseInt(r[3])||0;return function(t,e){return e>=0&&e<=59}(0,s)?n*(o*t+6e4*s):NaN}(g.timezone),isNaN(v)?s():n(j+b+v,o?.in)}const i={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},c=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,l=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,d=/^([+-])(\d{2})(?::?(\d{2}))?$/;function u(t){return t?parseInt(t):1}function p(t){return t&&parseFloat(t.replace(",","."))||0}const m=[31,null,31,30,31,30,31,31,30,31,30,31];function h(t){return t%400==0||t%4==0&&t%100!=0}class g{static filterToday(t){return t.filter((t=>!!t.dueDate&&s(a(t.dueDate))))}static filterCompleted(t){return t.filter((t=>t.completed))}static filterOverdue(t){return t.filter((t=>!(!t.dueDate||t.completed)&&(+n(a(t.dueDate))<Date.now()&&!s(a(t.dueDate)))))}static filterAll(t){return t}static filterActive(t){return t.filter((t=>!t.completed))}}class f{createTaskElement(t){const e={low:"bg-blue-200 text-blue-800",medium:"bg-yellow-200 text-yellow-800",high:"bg-red-200 text-red-800"},r=e[t.priority]||e.low,n=document.createElement("div");return n.className="task-item flex items-center gap-2 p-2 bg-white rounded mb-2 shadow",n.dataset.id=t.id,n.innerHTML=`\n            <input type="checkbox" class="checkbox task-checkbox" ${t.completed?"checked":""}>\n            <span class="task-name flex-1 ${t.completed?"line-through text-gray-500":""}">${t.name}</span>\n            <span class="priority-flag px-2 py-1 rounded text-xs font-medium ${r}">\n                ${t.priority.charAt(0).toUpperCase()+t.priority.slice(1)}\n            </span>\n            <button class="btn btn-sm more-btn">Details</button>\n            <div class="details hidden w-full mt-2 pt-2">\n                <textarea class="textarea textarea-bordered w-full">${t.description||""}</textarea>\n                <input type="date" class="input input-bordered w-full" value="${t.dueDate||""}">\n                <select class="select select-bordered w-full priority-select">\n                    <option value="low" ${"low"===t.priority?"selected":""}>Low</option>\n                    <option value="medium" ${"medium"===t.priority?"selected":""}>Medium</option>\n                    <option value="high" ${"high"===t.priority?"selected":""}>High</option>\n                </select>\n                <div class="flex justify-end gap-2 mt-2">\n                    <button class="btn btn-sm btn-warning edit-btn">Edit</button>\n                    <button class="btn btn-sm btn-error delete-btn">Delete</button>\n                </div>\n            </div>\n        `,n}}class j{attachActions(t,e,r){const n=t.querySelector(".task-checkbox"),o=t.querySelector(".more-btn"),s=t.querySelector(".edit-btn"),a=t.querySelector(".delete-btn"),i=t.querySelector(".details .project-select");n.addEventListener("change",(()=>{e.completed=n.checked,t.querySelector(".task-name").classList.toggle("line-through",e.completed),t.querySelector(".task-name").classList.toggle("text-gray-500",e.completed),r.saveTasks()})),o.addEventListener("click",(()=>{t.querySelector(".details").classList.toggle("hidden")})),i.addEventListener("change",(()=>{e.projectId=parseInt(i.value),r.saveTasks(),r.renderTasks()})),s.addEventListener("click",(()=>{const n=t.querySelector(".details .textarea"),o=t.querySelector('.details .input[type="date"]'),s=t.querySelector(".details .priority-select");e.description=n?n.value:e.description||"",e.dueDate=o?o.value:e.dueDate||"",e.priority=s?s.value:e.priority||"low",e.projectId=i?parseInt(i.value):e.projectId;const a=r.tasks.findIndex((t=>t.id===e.id));-1!==a&&(r.tasks[a]={...e}),r.saveTasks(),r.renderTasks()})),a.addEventListener("click",(()=>{const t=r.tasks.findIndex((t=>t.id===e.id));-1!==t&&(r.tasks.splice(t,1),r.saveTasks(),r.renderTasks())}))}}class v{loadTasks(){try{const t=localStorage.getItem("todoTasks");return t?JSON.parse(t):[]}catch(t){return console.error("Error loading tasks from localStorage:",t),[]}}saveTasks(t){try{localStorage.setItem("todoTasks",JSON.stringify(t))}catch(t){console.error("Error saving tasks to localStorage:",t)}}}class b{constructor(t,e,r,n,o,s,a){this.id=t,this.name=e,this.completed=r,this.description=n,this.dueDate=o,this.priority=s,this.projectId=a||1}}class y{constructor(t){this.todoDom=t}renderModals(){const t=document.createElement("div");t.innerHTML=this.getModalHTML(),document.body.appendChild(t);const e=t.querySelector("#task-form");e&&e.addEventListener("submit",(t=>this.handleAddTask(t)));const r=t.querySelector("#project-form");r&&r.addEventListener("submit",(t=>this.handleAddProject(t)))}getModalHTML(){return`\n            <input type="checkbox" id="task-modal" class="modal-toggle" />\n            <div class="modal" role="dialog">\n                <div class="modal-box">\n                    <h3 class="text-lg font-bold">Add New Task</h3>\n                    <form id="task-form" class="space-y-4 mt-4">\n                        <div>\n                            <input type="text" name="name" placeholder="Task Name" class="input input-bordered w-full" required>\n                        </div>\n                        <div>\n                            <textarea name="description" class="textarea textarea-bordered w-full" placeholder="Description"></textarea>\n                        </div>\n                        <div>\n                            <input type="date" name="dueDate" class="input input-bordered w-full">\n                        </div>\n                        <div>\n                            <select name="priority" class="select select-bordered w-full">\n                                <option value="low">Low</option>\n                                <option value="medium">Medium</option>\n                                <option value="high">High</option>\n                            </select>\n                        </div>\n                        <div>\n                            <select name="projectId" class="select select-bordered w-full">\n                                ${this.getProjectOptionsHTML()}\n                            </select>\n                        </div>\n                        <div class="modal-action">\n                            <button type="submit" class="btn btn-primary">Add Task</button>\n                            <label for="task-modal" class="btn">Cancel</label>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <input type="checkbox" id="project-modal" class="modal-toggle" />\n            <div class="modal" role="dialog">\n                <div class="modal-box">\n                    <h3 class="text-lg font-bold">Add New Project</h3>\n                    <form id="project-form" class="space-y-4 mt-4">\n                        <div>\n                            <input type="text" name="projectName" placeholder="Project Name" class="input input-bordered w-full" required>\n                        </div>\n                        <div class="modal-action">\n                            <button type="submit" class="btn btn-primary">Add Project</button>\n                            <label for="project-modal" class="btn">Cancel</label>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        `}getProjectOptionsHTML(){const t=this.todoDom.projectManager;return t.getProjects().map((e=>`\n            <option value="${e.id}" ${e.id===t.getCurrentProjectId()?"selected":""}>${e.name}</option>\n        `)).join("")}handleAddTask(t){t.preventDefault();const e=t.target,r=e.name.value.trim();if(!r)return;const n=new b(Date.now(),r,!1,e.description.value.trim(),e.dueDate.value,e.priority.value,parseInt(e.projectId.value)||this.todoDom.projectManager.getCurrentProjectId());this.todoDom.addTask(n),e.reset(),document.getElementById("task-modal").checked=!1}handleAddProject(t){t.preventDefault();const e=t.target,r=e.projectName.value.trim();if(!r)return;const n=this.todoDom.projectManager,o=n.addProject(r);o&&(this.todoDom.updateProjectList(),n.setCurrentProjectId(o.id),this.todoDom.updateActiveClasses(),this.todoDom.renderTasks()),e.reset(),document.getElementById("project-modal").checked=!1}}class k{constructor(t,e){this.projectManager=t,this.todoDom=e}setupProjectButtons(){document.querySelectorAll(".navbar .menu li a:not(.btn)").forEach((t=>{t.addEventListener("click",(e=>{if(e.preventDefault(),document.querySelectorAll(".navbar .menu li a:not(.btn)").forEach((t=>t.classList.remove("bg-gray-700","text-white"))),t.classList.add("bg-gray-700","text-white"),"all"===t.dataset.project)this.projectManager.setCurrentProjectId(null);else{const t=e.target.textContent,r=this.projectManager.getProjects().find((e=>e.name===t));r&&this.projectManager.setCurrentProjectId(r.id)}this.todoDom.renderTasks()}))})),document.querySelectorAll(".navbar .menu .btn.add-project-btn").forEach((t=>{t.addEventListener("click",(()=>{document.getElementById("project-modal").checked=!0}))}))}updateProjectList(){const t=document.querySelectorAll(".navbar .menu details ul"),e=document.querySelector('#task-form select[name="projectId"]'),r=this.projectManager.getProjects(),n=`\n            <li><a data-project="all">All Projects</a></li>\n            ${r.map((t=>`\n                <li><a data-project-id="${t.id}">${t.name}</a></li>\n            `)).join("")}\n        `,o=r.map((t=>`\n            <option value="${t.id}" ${t.id===this.projectManager.getCurrentProjectId()?"selected":""}>${t.name}</option>\n        `)).join("");t.forEach((t=>t.innerHTML=n)),e&&(e.innerHTML=o),this.setupProjectButtons()}addProjectSelectToTask(t,e){const r=t.querySelector(".details"),n=document.createElement("select");n.className="select select-bordered w-full project-select",n.innerHTML=this.projectManager.getProjects().map((t=>`\n            <option value="${t.id}" ${t.id===e.projectId?"selected":""}>${t.name}</option>\n        `)).join(""),r.insertBefore(n,r.querySelector(".flex"))}setInitialProjectActiveClass(){const t=this.projectManager.getCurrentProjectId();document.querySelectorAll(".navbar .menu li a:not(.btn)").forEach((e=>{e.classList.remove("bg-gray-700","text-white"),(null===t&&"all"===e.dataset.project||e.dataset.projectId==t)&&e.classList.add("bg-gray-700","text-white")}))}}class T{constructor(t){this.container=document.getElementById("todo-container"),this.container?(this.projectManager=t,this.taskRenderer=new f,this.taskActions=new j,this.taskStorage=new v,this.modalManager=new y(this),this.projectUIManager=new k(t,this),this.currentFilter=g.filterAll,this.tasks=this.taskStorage.loadTasks()||[],this.init()):console.error("Todo container not found")}init(){this.setupAddTaskButton(),this.setupFilterButtons(),this.projectUIManager.setupProjectButtons(),this.modalManager.renderModals(),this.updateActiveClasses(),this.renderTasks()}setupAddTaskButton(){const t=document.getElementById("add-task-btn");t&&t.addEventListener("click",(()=>{document.getElementById("task-modal").checked=!0}))}setupFilterButtons(){document.querySelectorAll(".filter-btn").forEach((t=>{t.addEventListener("click",(()=>{document.querySelectorAll(".filter-btn").forEach((t=>t.classList.remove("bg-gray-700","text-white"))),t.classList.add("bg-gray-700","text-white");const e=t.dataset.filter;this.currentFilter=g[e]||g.filterAll,this.renderTasks()}))}))}renderTasks(){let t;if(this.container.innerHTML="",null===this.projectManager.getCurrentProjectId())t=this.currentFilter(this.tasks);else{const e=this.tasks.filter((t=>t.projectId===this.projectManager.getCurrentProjectId()));t=this.currentFilter(e)}t.forEach((t=>this.renderTask(t)))}renderTask(t){try{if(!t.id||!t.name)return void console.error("Invalid task object:",t);const e=this.taskRenderer.createTaskElement(t);this.projectUIManager.addProjectSelectToTask(e,t),this.taskActions.attachActions(e,t,this),this.container.appendChild(e)}catch(e){console.error("Error rendering task:",e,"Task:",t)}}addTask(t){this.tasks.push(t),this.saveTasks(),this.renderTasks()}updateProjectList(){this.projectUIManager.updateProjectList()}saveTasks(){this.taskStorage.saveTasks(this.tasks)}setInitialFilterActiveClass(){document.querySelectorAll(".filter-btn").forEach((t=>t.classList.remove("bg-gray-700","text-white")));const t=document.querySelector(`.filter-btn[data-filter="${this.getCurrentFilterName()}"]`);t&&t.classList.add("bg-gray-700","text-white")}getCurrentFilterName(){return this.currentFilter===g.filterAll?"filterAll":this.currentFilter===g.filterActive?"filterActive":this.currentFilter===g.filterCompleted?"filterCompleted":this.currentFilter===g.filterToday?"filterToday":this.currentFilter===g.filterOverdue?"filterOverdue":"filterAll"}updateActiveClasses(){this.setInitialFilterActiveClass(),this.projectUIManager.setInitialProjectActiveClass()}}class w{constructor(){this.projects=this.loadProjectsFromLocalStorage()||[{id:1,name:"Project 1"}],this.currentProjectId=1,this.saveProjectsToLocalStorage()}loadProjectsFromLocalStorage(){try{const t=localStorage.getItem("todoProjects");return t?JSON.parse(t):null}catch(t){return console.error("Error loading projects from localStorage:",t),null}}saveProjectsToLocalStorage(){try{localStorage.setItem("todoProjects",JSON.stringify(this.projects))}catch(t){console.error("Error saving projects to localStorage:",t)}}addProject(t){if(!t||!t.trim())return null;const e={id:Date.now(),name:t.trim()};return this.projects.push(e),this.saveProjectsToLocalStorage(),e}editProject(t,e){if(!e||!e.trim())return null;const r=this.projects.find((e=>e.id===t));return r?(r.name=e.trim(),this.saveProjectsToLocalStorage(),r):null}getProjects(){return this.projects}setCurrentProjectId(t){this.currentProjectId=t}getCurrentProjectId(){return this.currentProjectId}}document.addEventListener("DOMContentLoaded",(()=>{const t=new w;new T(t)}))})();